services:
  mcp-linkedin-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mcp-linkedin-server
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DOTENV_PRIVATE_KEY=34db975c92996fce2430eb88c9d2ff5b7923264eb7c64109046a8e3c13fbc360
    volumes:
      # Mount encrypted .env file for dotenvx
      - ./.env:/app/.env:ro
    networks:
      - mcp-network
    # For MCP, we typically use stdio, but if needed for debugging:
    # ports:
    #   - "5050:5050"

    # Health check
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Health check passed')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  mcp-network:
    driver: bridge

# For development with volume mounting
# Uncomment the following service for development
# linkedin-mcp-server-dev:
#   build:
#     context: .
#     dockerfile: Dockerfile
#   container_name: linkedin-mcp-server-dev
#   restart: unless-stopped
#   environment:
#     - NODE_ENV=development
#   env_file:
#     - .env
#   volumes:
#     - ./src:/app/src:ro
#     - ./.env:/app/.env:ro
#   command: npm run start:dev
#   networks:
#     - mcp-network